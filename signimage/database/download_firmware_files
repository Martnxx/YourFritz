#! /bin/bash
#######################################################################################################
#                                                                                                     #
# download firmware images from server of vendor                                                      #
#                                                                                                     #
###################################################################################################VER#
#                                                                                                     #
# download_firmware_files, version 0.6                                                                #
#                                                                                                     #
# This script is a part of the YourFritz project from https://github.com/PeterPawn/YourFritz.         #
#                                                                                                     #
###################################################################################################CPY#
#                                                                                                     #
# Copyright (C) 2017-2019 P.Haemmerlein (peterpawn@yourfritz.de)                                      #
#                                                                                                     #
###################################################################################################LIC#
#                                                                                                     #
# This project is free software, you can redistribute it and/or modify it under the terms of the GNU  #
# General Public License as published by the Free Software Foundation; either version 2 of the        #
# License, or (at your option) any later version.                                                     #
#                                                                                                     #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without   #
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      #
# General Public License under http://www.gnu.org/licenses/gpl-2.0.html for more details.             #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# Run the script without parameters for an usage description.                                         #
#                                                                                                     #
#######################################################################################################
usage()
(
	printf "Download firmware images from internet.\n\n"
	printf "Copyright (C) 2017-2019 P. Haemmerlein (peterpawn@yourfritz.de)\n\n"
	printf "Usage:\n\n"
	printf "\033[1m%s\033[0m <url> <remote_directory> [ -a ] <local_directory>\n\n" "${0##*/}"
	printf "Download all 'zip' and 'image' files from the specified server and store\n"
	printf "them locally in the specified directory. This local directory is removed\n"
	printf "at the first step and re-created prior to the download, if option '-a' was\n"
	printf "not specified.\n\n"
	printf "The recursive search for such files starts at the specified directory on\n"
	printf "server.\n\n"
	printf "A found 'zip' files is researched further and a contained 'image' file\n"
	printf "gets extracted, before the 'zip' file will be deleted again.\n\n"
	printf "The download process requires a server, that supports at least TLS 1.2\n"
	printf "connections, to ensure its authentity.  The public key of the correct\n"
	printf "certificate has to be downloaded and checked prior to a call of this script\n"
	printf "and has to be stored in a file '<server>.pem'. This file will be used a\n"
	printf "pinned public key during download and a connection will get abandoned, if\n"
	printf "the server does not provide a certificate with this public key.\n"
)

server="$1"
directory="$2"
shift 2
if [ "$1" = "-a" ]; then
	append=1
	shift
else
	append=0
fi
localdir="$1"

[ -z "$server" ] && usage && exit 0
[ -z "$localdir" ] && usage 1>&2 && exit 1
[ "${#localdir}" -lt 2 ] && usage 1>&2 && exit 1
[ -n "$2" ] && usage 1>&2 && exit 1
! [ -f "$server.pem" ] && usage 1>&2 && exit 1

[ $append -eq 1 ] || rm -r "$localdir" 2>/dev/null
mkdir -p "$localdir" 2>/dev/null
oldcount="$(find "$localdir" -type f -name '*.image' | wc -l)"

# no trap at normal exit, only if interrupted in another manner
[ $append -eq 0 ] \
	&& trap "printf 'Download interrupted, intermediate results removed.\n' 1>&2; rm -r "$localdir" 2>/dev/null; exit" HUP INT \
	|| trap "printf 'Download interrupted, intermediate results kept.\n' 1>&2; exit" HUP INT

wget \
	--https-only \
	--secure-protocol=tlsv1_2 \
	--recursive --relative \
	--mirror \
	--no-parent \
	--no-directories \
	--timestamping \
	--directory-prefix="$localdir" \
	--accept="*.zip,*.image" \
	--pinnedpubkey=$server.pem \
	--quiet \
	https://$server/$directory/

for zipfile in $(find "$localdir" -type f -name "*.zip" 2>/dev/null); do
	image=$(unzip -l $zipfile 2>/dev/null | /bin/grep "\.image" | sed -n -e "s|^.* \([^ ]*\)\$|\1|p")
	[ -z "$image" ] && continue;
	unzip -o -q $zipfile $image -d "$localdir" 2>/dev/null
done

find "$localdir" -type f -not -name "*.image" -delete

newcount="$(find "$localdir" -type f -name '*.image' | wc -l)"
newcount=$(( newcount - oldcount ))
printf "%u new files stored locally.\n" "$newcount" 1>&2
#######################################################################################################
#                                                                                                     #
# end of script                                                                                       #
#                                                                                                     #
#######################################################################################################
exit 0
